{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","name","number","onClick","id","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","className","message","Filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","toLowerCase","includes","event","target","preventDefault","existing","find","p","window","confirm","retunedPerson","catch","error","addedPerson","concat","console","log","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.731b5a25.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return (\r\n    persons.map(person=>\r\n      <p key={person.id}>\r\n        {person.name} {person.number} \r\n        <button onClick={() => deletePerson(person.id)}>delete</button>\r\n      </p>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: \r\n        <input\r\n          value={props.newName}\r\n          onChange={props.handleNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input \r\n          value={props.newNumber}\r\n          onChange={props.handleNumberChange}          \r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n  return (\r\n    <input\r\n    value={props.value}\r\n    onChange={props.onChange}\r\n  />\r\n  )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterString, setStringFilter ] = useState('')\r\n  const [ notification, setNotification ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then((data) => {\r\n        setPersons(data)\r\n      })\r\n\r\n  }, [])\r\n\r\n  const notifyWith = (message, type='success') => {\r\n    setNotification({ message, type })\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }  \r\n  \r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }  \r\n\r\n  const handleFilterStringChange = (event) => {\r\n    setStringFilter(event.target.value)\r\n  } \r\n\r\n  const deletePerson = (id) => {\r\n    const toDelete = persons.find(p => p.id === id)\r\n    const ok = window.confirm(`Delete ${toDelete.name}`)\r\n    if (ok) {\r\n      personService.remove(id)\r\n        .then(response => {\r\n          setPersons(persons.filter(p => p.id !== id))\r\n          notifyWith(`Deleted ${toDelete.name}`)\r\n        }).catch(() => {\r\n          setPersons(persons.filter(p => p.id !== id))\r\n          notifyWith(`${toDelete.name} had already been removed`, 'error')\r\n        })\r\n    }\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const existing = persons.find(p => p.name === newName)\r\n    if (existing) {\r\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\r\n      if (ok) {\r\n        personService.update(existing.id, {\r\n          name: existing.name,\r\n          number:newNumber\r\n        }).then(retunedPerson => {\r\n          setPersons(persons.map(person => person.id !== existing.id ? person : retunedPerson))\r\n          notifyWith(`Changed number of  ${existing.name}`)\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          notifyWith(`${error.response.data.error}`, 'error')\r\n        })\r\n      }\r\n\r\n    } else {\r\n      personService.create({\r\n        name: newName,\r\n        number: newNumber   \r\n      }).then(addedPerson => {\r\n        setPersons(persons.concat(addedPerson))\r\n        notifyWith(`Added ${newName}`)\r\n        setNewName('')\r\n        setNewNumber('')\r\n      }).catch(error => {\r\n        console.log(error.response.data.error)\r\n        notifyWith(`${error.response.data.error} `, 'error')\r\n      })\r\n    }\r\n  }\r\n\r\n  const personsToShow = filterString.length === 0 ?\r\n    persons : \r\n    persons.filter(person => person.name.toLowerCase().includes(filterString.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification notification={notification} />\r\n\r\n      filter shown with: \r\n      <Filter\r\n        value={filterString}\r\n        onChange={handleFilterStringChange}\r\n      />\r\n\r\n      <h3>add a new</h3>\r\n      <PersonForm \r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        newNumber={newNumber}\r\n        newName={newName}\r\n        addPerson={addPerson}\r\n      />\r\n     \r\n      <h3>Numbers</h3>\r\n      <Persons persons={personsToShow} deletePerson={deletePerson}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}